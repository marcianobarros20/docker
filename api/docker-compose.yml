version: '3'
services:
  api:
    image: microblink/api:1.23.0
    environment:
#      REQUIRED variables:
      - LICENSEE=${MICROBLINK_LICENSEE-<YOUR_LICENSEE>}
      - LICENSE_KEY=${MICROBLINK_LICENSE_KEY-<YOUR_LICENSE_KEY>}
      - PORT=${PORT-8080}

#      Set maximum size for JVM memory allocation pool.
#      Recommended to set 1GB less than available RAM memory on the machine,
#      if container has not defined any memory limit.
#      If container has set usage memory limit then this value should be 256MB less than available
#      container's memory limit.
      - JAVA_OPTS=-Xmx8g

#      Experimental JDK feature for automatic memory allocation defined by Linux cgroup
#      NOTE: Deprecated option '-XX:+UseCGroupMemoryLimitForHeap' in OpenJDK 10 and removed in the OpenJDK 11!
#      Please use only in DEV environment for performance testing purposes with MAX JDK 9
#      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -XshowSettings:vm

#      HTTPS with Java max heap 3GB
#      - JAVA_OPTS=-Xmx3g -Dserver.ssl.enabled=true

#      OPTIONAL variables:
#      - MLS_IS_ENABLED=true
#      - MICROBLINK_IDENTITY_IS_ENABLED=true
#      - MICROBLINK_IDENTITY_SERVER_URL=https://apiprod.microblink.com/id
#      - MICROBLINK_IDENTITY_CONSUMER_AUTHENTICATION_HEADER=<YOUR_CONSUMER_AUTHORIZATION>
#      - MICROBLINK_IDENTITY_CONSUME_BATCH_WHEN_ACCUMULATED_EXECUTIONS_ARE_MORE_THAN=10
#      - MICROBLINK_IDENTITY_CONSUME_BATCH_WHEN_HOW_MANY_SECONDS_SINCE_LAST_CONSUMING=30
#      - MICROBLINK_IDENTITY_IS_ENABLED_AND_AUTHORIZATION_IS_MISSING_IS_MASKING_RESULTS_ENABLED=true

#      OPTIONAL but ONLY IF: nginx is used as web proxy and Let's Encrypt as SSL certificate provider
#      docker-compose.webproxy.yml should be run before this docker-compose.yml

#      - VIRTUAL_HOST=microblink-docker-test.example.com
#      - VIRTUAL_PORT=8080
#      - LETSENCRYPT_HOST=microblink-docker-test.example.com
#      - LETSENCRYPT_EMAIL=microblink-docker-test@example.com

#      Application protection with basic authentication
#      - BASIC_AUTH_USERNAME=foo
#      - BASIC_AUTH_PASSWORD=bar


    restart: unless-stopped
    volumes:
      - ./logs:/opt/microblink-api-ws/logs
    ports:
      - "80:${PORT-8080}"

networks:
  default:
    external:
      name: microblink
